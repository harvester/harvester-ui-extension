{"version":3,"file":"harvester-1.6.0-rc2.umd.min.389.js","mappings":"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","sources":["webpack://harvester-1.6.0-rc2/../../node_modules/@rancher/shell/components/form/ResourceTabs/index.vue","webpack://harvester-1.6.0-rc2/../../node_modules/@rancher/shell/components/form/Conditions.vue","webpack://harvester-1.6.0-rc2/../../node_modules/@rancher/shell/components/form/Conditions.vue?8f43","webpack://harvester-1.6.0-rc2/../../node_modules/@rancher/shell/components/PaginatedResourceTable.vue?6b49","webpack://harvester-1.6.0-rc2/../../node_modules/@rancher/shell/components/PaginatedResourceTable.vue","webpack://harvester-1.6.0-rc2/../../node_modules/@rancher/shell/components/PaginatedResourceTable.vue?9eda","webpack://harvester-1.6.0-rc2/../../node_modules/@rancher/shell/components/RelatedResources.vue","webpack://harvester-1.6.0-rc2/../../node_modules/@rancher/shell/components/RelatedResources.vue?df11","webpack://harvester-1.6.0-rc2/../../node_modules/@rancher/shell/components/form/ResourceTabs/index.vue?3fd5"],"sourcesContent":["<script>\n/*\n    Tab component for resource CRU pages featuring:\n    Labels and Annotation tabs with content filtered by create-edit-view mixin\n*/\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport Conditions from '@shell/components/form/Conditions';\nimport { EVENT } from '@shell/config/types';\nimport PaginatedResourceTable from '@shell/components/PaginatedResourceTable.vue';\nimport { _VIEW } from '@shell/config/query-params';\nimport RelatedResources from '@shell/components/RelatedResources';\nimport { isConditionReadyAndWaiting } from '@shell/plugins/dashboard-store/resource-class';\nimport { PaginationParamFilter } from '@shell/types/store/pagination.types';\nimport { MESSAGE, REASON } from '@shell/config/table-headers';\nimport { STEVE_EVENT_LAST_SEEN, STEVE_EVENT_TYPE, STEVE_NAME_COL } from '@shell/config/pagination-table-headers';\nimport { headerFromSchemaColString } from '@shell/store/type-map.utils';\n\nexport default {\n\n  name: 'ResourceTabs',\n\n  components: {\n    Tabbed,\n    Tab,\n    Conditions,\n    PaginatedResourceTable,\n    RelatedResources,\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    // resource instance\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    // create-edit-view mode\n    mode: {\n      type:    String,\n      default: _VIEW,\n    },\n\n    defaultTab: {\n      type:    String,\n      default: null,\n    },\n\n    needConditions: {\n      type:    Boolean,\n      default: true\n    },\n\n    needEvents: {\n      type:    Boolean,\n      default: true\n    },\n\n    needRelated: {\n      type:    Boolean,\n      default: true\n    },\n\n    extensionParams: {\n      type:    Object,\n      default: null\n    },\n    useHash: {\n      type:    Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    const inStore = this.$store.getters['currentStore'](EVENT);\n    const eventSchema = this.$store.getters[`${ inStore }/schemaFor`](EVENT); // @TODO be smarter about which resources actually ever have events\n\n    const paginationHeaders = eventSchema ? [\n      STEVE_EVENT_LAST_SEEN,\n      STEVE_EVENT_TYPE,\n      REASON,\n      headerFromSchemaColString('Subobject', eventSchema, this.$store.getters, true),\n      headerFromSchemaColString('Source', eventSchema, this.$store.getters, true),\n      MESSAGE,\n      headerFromSchemaColString('First Seen', eventSchema, this.$store.getters, true),\n      headerFromSchemaColString('Count', eventSchema, this.$store.getters, true),\n      STEVE_NAME_COL,\n    ] : [];\n\n    return {\n      eventSchema,\n      EVENT,\n      selectedTab:    this.defaultTab,\n      inStore,\n      showConditions: false,\n      paginationHeaders\n    };\n  },\n\n  beforeUnmount() {\n    this.$store.dispatch('cluster/forgetType', EVENT);\n  },\n\n  fetch() {\n    // By this stage the `value` should be set. Taking a chance that this is true\n    // The alternative is have an expensive watch on the `value` and trigger there (as well)\n    this.setShowConditions();\n  },\n\n  computed: {\n    showEvents() {\n      return this.isView && this.needEvents && this.eventSchema;\n    },\n    showRelated() {\n      return this.isView && this.needRelated;\n    },\n    eventHeaders() {\n      return [\n        {\n          name:  'type',\n          label: this.t('tableHeaders.type'),\n          value: 'eventType',\n          sort:  'eventType',\n        },\n        {\n          name:  'reason',\n          label: this.t('tableHeaders.reason'),\n          value: 'reason',\n          sort:  'reason',\n        },\n        {\n          name:          'date',\n          label:         this.t('tableHeaders.updated'),\n          value:         'date',\n          sort:          'date:desc',\n          formatter:     'LiveDate',\n          formatterOpts: { addSuffix: true },\n          width:         125\n        },\n        {\n          name:  'message',\n          label: this.t('tableHeaders.message'),\n          value: 'message',\n          sort:  'message',\n        },\n      ];\n    },\n    conditionsHaveIssues() {\n      if (this.showConditions) {\n        return this.value.status?.conditions?.filter((cond) => !isConditionReadyAndWaiting(cond)).some((cond) => cond.error);\n      }\n\n      return false;\n    }\n  },\n\n  methods: {\n    // Ensures we only fetch events and show the table when the events tab has been activated\n    tabChange(neu) {\n      this.selectedTab = neu?.selectedName;\n    },\n\n    /**\n    * Conditions come from a resource's `status`. They are used by both core resources like workloads as well as those from CRDs\n    * - Workloads\n    * - Nodes\n    * - Fleet git repo\n    * - Cluster (provisioning)\n    *\n    * Check here if the resource type contains conditions via the schema resourceFields\n    */\n    async setShowConditions() {\n      if (this.isView && this.needConditions && !!this.value?.type && !!this.schema?.fetchResourceFields) {\n        await this.schema.fetchResourceFields();\n\n        this.showConditions = this.$store.getters[`${ this.inStore }/pathExistsInSchema`](this.value.type, 'status.conditions');\n      }\n    },\n\n    /**\n     * Filter out hidden repos from list of all repos\n     */\n    filterEventsLocal(rows) {\n      return rows.filter((event) => event.involvedObject?.uid === this.value?.metadata?.uid);\n    },\n\n    /**\n     * Filter out hidden repos via api\n     *\n     * pagination: PaginationArgs\n     * returns: PaginationArgs\n     */\n    filterEventsApi(pagination) {\n      if (!pagination.filters) {\n        pagination.filters = [];\n      }\n\n      const field = `involvedObject.uid`;\n\n      // of type PaginationParamFilter\n      let existing = null;\n\n      for (let i = 0; i < pagination.filters.length; i++) {\n        const filter = pagination.filters[i];\n\n        if (!!filter.fields.find((f) => f.field === field)) {\n          existing = filter;\n          break;\n        }\n      }\n\n      const required = PaginationParamFilter.createSingleField({\n        field,\n        exact:  true,\n        value:  this.value.metadata.uid,\n        equals: true\n      });\n\n      if (!!existing) {\n        Object.assign(existing, required);\n      } else {\n        pagination.filters.push(required);\n      }\n\n      return pagination;\n    }\n  }\n};\n</script>\n\n<template>\n  <Tabbed\n    v-bind=\"$attrs\"\n    :default-tab=\"defaultTab\"\n    :resource=\"value\"\n    :use-hash=\"useHash\"\n    @changed=\"tabChange\"\n  >\n    <slot />\n\n    <Tab\n      v-if=\"showConditions\"\n      label-key=\"resourceTabs.conditions.tab\"\n      name=\"conditions\"\n      :weight=\"-1\"\n      :display-alert-icon=\"conditionsHaveIssues\"\n    >\n      <Conditions :value=\"value\" />\n    </Tab>\n\n    <Tab\n      v-if=\"showEvents\"\n      label-key=\"resourceTabs.events.tab\"\n      name=\"events\"\n      :weight=\"-2\"\n    >\n      <!-- namespaced: false given we don't want the default handling of namespaced resource (apply header filter)  -->\n      <PaginatedResourceTable\n        v-if=\"selectedTab === 'events'\"\n        :schema=\"eventSchema\"\n        :local-filter=\"filterEventsLocal\"\n        :api-filter=\"filterEventsApi\"\n        :use-query-params-for-simple-filtering=\"false\"\n        :headers=\"eventHeaders\"\n        :paginationHeaders=\"paginationHeaders\"\n        :namespaced=\"false\"\n      />\n    </Tab>\n\n    <Tab\n      v-if=\"showRelated\"\n      name=\"related\"\n      label-key=\"resourceTabs.related.tab\"\n      :weight=\"-3\"\n    >\n      <h3 v-t=\"'resourceTabs.related.from'\" />\n      <RelatedResources\n        :ignore-types=\"[value.type]\"\n        :value=\"value\"\n        direction=\"from\"\n      />\n\n      <h3\n        v-t=\"'resourceTabs.related.to'\"\n        class=\"mt-20\"\n      />\n      <RelatedResources\n        :ignore-types=\"[value.type]\"\n        :value=\"value\"\n        direction=\"to\"\n      />\n    </Tab>\n  </Tabbed>\n</template>\n","<script>\nimport SortableTable from '@shell/components/SortableTable';\n\nexport default {\n  components: { SortableTable },\n  props:      {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  computed: {\n    headers() {\n      return [\n        {\n          name:        'condition',\n          labelKey:    'tableHeaders.condition',\n          value:       'condition',\n          width:       150,\n          sort:        'condition',\n          dashIfEmpty: true,\n        },\n        {\n          name:        'status',\n          labelKey:    'tableHeaders.status',\n          value:       'status',\n          width:       75,\n          sort:        'status',\n          dashIfEmpty: true,\n        },\n        {\n          name:          'time',\n          labelKey:      'tableHeaders.updated',\n          value:         'time',\n          sort:          'time',\n          formatter:     'LiveDate',\n          formatterOpts: { addSuffix: true },\n          width:         125,\n          dashIfEmpty:   true,\n        },\n        {\n          name:        'message',\n          labelKey:    'tableHeaders.message',\n          value:       'message',\n          sort:        ['message'],\n          dashIfEmpty: true,\n        },\n      ];\n    },\n\n    rows() {\n      return (this.value.status?.conditions || []).map((cond) => {\n        let message = cond.message || '';\n\n        if ( cond.reason ) {\n          message = `[${ cond.reason }] ${ message }`.trim();\n        }\n\n        return {\n          condition: cond.type || 'Unknown',\n          status:    cond.status || 'Unknown',\n          error:     cond.error,\n          time:      cond.lastProbeTime || cond.lastUpdateTime || cond.lastTransitionTime,\n          message,\n        };\n      });\n    },\n  }\n};\n</script>\n\n<template>\n  <SortableTable\n    :headers=\"headers\"\n    :rows=\"rows\"\n    key-field=\"condition\"\n    default-sort-by=\"condition\"\n    :table-actions=\"false\"\n    :row-actions=\"false\"\n    :search=\"false\"\n  >\n    <template #cell:condition=\"{row}\">\n      <span :class=\"{'text-error': row.error}\">{{ row.condition }}</span>\n    </template>\n\n    <template #cell:status=\"{row}\">\n      <span :class=\"{'text-error': row.error}\">{{ row.status }}</span>\n    </template>\n  </SortableTable>\n</template>\n","import { render } from \"./Conditions.vue?vue&type=template&id=14e4eb96\"\nimport script from \"./Conditions.vue?vue&type=script&lang=js\"\nexport * from \"./Conditions.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, renderSlot as _renderSlot, resolveComponent as _resolveComponent, mergeProps as _mergeProps, withCtx as _withCtx, renderList as _renderList, createSlots as _createSlots, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ResourceTable = _resolveComponent(\"ResourceTable\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_ResourceTable, _mergeProps({ ref: \"table\" }, _ctx.$attrs, {\n      schema: _ctx.schema,\n      rows: _ctx.rows,\n      \"alt-loading\": _ctx.canPaginate && !_ctx.isFirstLoad,\n      loading: _ctx.loading,\n      groupable: _ctx.groupable,\n      headers: _ctx.safeHeaders,\n      namespaced: _ctx.namespaced,\n      \"external-pagination-enabled\": _ctx.canPaginate,\n      \"external-pagination-result\": _ctx.paginationResult,\n      onPaginationChanged: _ctx.paginationChanged\n    }), _createSlots({ _: 2 }, [\n      _renderList(_ctx.$slots, (_, slot) => {\n        return {\n          name: slot,\n          fn: _withCtx((scope) => [\n            _renderSlot(_ctx.$slots, slot, _normalizeProps(_guardReactiveProps(scope)))\n          ])\n        }\n      })\n    ]), 1040, [\"schema\", \"rows\", \"alt-loading\", \"loading\", \"groupable\", \"headers\", \"namespaced\", \"external-pagination-enabled\", \"external-pagination-result\", \"onPaginationChanged\"])\n  ]))\n}","<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport ResourceTable from '@shell/components/ResourceTable.vue';\n\n/**\n * This is meant to enable ResourceList like capabilities outside of List pages / components\n *\n * Specifically\n * - Resource Fetch features, including server-side pagination\n * - Some plumbing\n *\n * This avoids polluting the owning component with mixins\n *\n */\nexport default defineComponent({\n  name: 'PaginatedResourceTable',\n\n  components: { ResourceTable },\n\n  mixins: [ResourceFetch],\n\n  props: {\n    schema: {\n      type:     Object,\n      required: true,\n    },\n\n    headers: {\n      type:    Array,\n      default: null,\n    },\n\n    paginationHeaders: {\n      type:    Array,\n      default: null,\n    },\n\n    groupable: {\n      type:    Boolean,\n      default: null, // Null: auto based on namespaced and type custom groupings\n    },\n\n    namespaced: {\n      type:    Boolean,\n      default: null, // Automatic from schema\n    },\n\n    /**\n     * Information may be required from resources other than the primary one shown per row\n     *\n     * This will fetch them ALL and will be run in a non-server-side pagination world\n     *\n     * of type PagTableFetchSecondaryResources\n     */\n    fetchSecondaryResources: {\n      type:    Function,\n      default: null,\n    },\n\n    /**\n     * Information may be required from resources other than the primary one shown per row\n     *\n     * This will fetch only those relevant to the current page using server-side pagination based filters\n     *\n     * called from shell/mixins/resource-fetch-api-pagination.js\n     *\n     * of type PagTableFetchPageSecondaryResources\n     */\n    fetchPageSecondaryResources: {\n      type:    Function,\n      default: null,\n    }\n  },\n\n  data() {\n    return { resource: this.schema.id };\n  },\n\n  async fetch() {\n    const promises = [\n      this.$fetchType(this.resource, [], this.inStore),\n    ];\n\n    if (this.fetchSecondaryResources) {\n      promises.push(this.fetchSecondaryResources({ canPaginate: this.canPaginate }));\n    }\n\n    await Promise.all(promises);\n  },\n\n  computed: {\n    safeHeaders(): any[] {\n      const customHeaders: any[] = this.canPaginate ? this.paginationHeaders : this.headers;\n\n      return customHeaders || this.$store.getters['type-map/headersFor'](this.schema, this.canPaginate);\n    }\n  },\n\n  methods: {\n    clearSelection() {\n      this.$refs.table.clearSelection();\n    },\n  }\n});\n\n</script>\n\n<template>\n  <div>\n    <ResourceTable\n      ref=\"table\"\n      v-bind=\"$attrs\"\n      :schema=\"schema\"\n      :rows=\"rows\"\n      :alt-loading=\"canPaginate && !isFirstLoad\"\n      :loading=\"loading\"\n      :groupable=\"groupable\"\n\n      :headers=\"safeHeaders\"\n      :namespaced=\"namespaced\"\n\n      :external-pagination-enabled=\"canPaginate\"\n      :external-pagination-result=\"paginationResult\"\n      @pagination-changed=\"paginationChanged\"\n    >\n      <!-- Pass down templates provided by the caller -->\n      <template\n        v-for=\"(_, slot) of $slots\"\n        v-slot:[slot]=\"scope\"\n        :key=\"slot\"\n      >\n        <slot\n          :name=\"slot\"\n          v-bind=\"scope\"\n        />\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n","import { render } from \"./PaginatedResourceTable.vue?vue&type=template&id=09fa18e8&ts=true\"\nimport script from \"./PaginatedResourceTable.vue?vue&type=script&lang=ts\"\nexport * from \"./PaginatedResourceTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { STATES_ENUM, colorForState, stateDisplay } from '@shell/plugins/dashboard-store/resource-class';\nimport { NAME, NAMESPACE, STATE, TYPE } from '@shell/config/table-headers';\nimport { sortableNumericSuffix } from '@shell/utils/sort';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport { BadgeState } from '@components/BadgeState';\n\nexport default {\n  components: { ResourceTable, BadgeState },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    rel: {\n      type:    String,\n      default: null,\n    },\n\n    direction: {\n      type:    String,\n      default: 'to'\n    },\n\n    ignoreTypes: {\n      type:    Array,\n      default: () => []\n    }\n  },\n\n  data() {\n    return { loadedResources: 1 };\n  },\n\n  computed: {\n    filteredRelationships() {\n      let all = this.value?.metadata?.relationships || [];\n\n      // @TODO probably will need more flexible filtering here for\n      // related resources other than helm app resources...\n\n      all = all.filter((relationship) => {\n        const type = relationship[`${ this.direction }Type`];\n\n        if (!type || this.ignoreTypes.includes(type)) {\n          return false;\n        }\n\n        if (this.rel && relationship.rel !== this.rel) {\n          return false;\n        }\n\n        return true;\n      });\n\n      return all;\n    },\n\n    rows() {\n      if ( this.loadedResources < 1 ) {\n        // This does nothing except force recompute when loaded resources change below\n        return;\n      }\n\n      const cluster = this.$store.getters['clusterId'];\n      const inStore = this.$store.getters['currentStore']();\n      const out = [];\n\n      for ( const r of this.filteredRelationships) {\n        const type = r[`${ this.direction }Type`];\n        const state = r.state || this.$store.getters[`${ inStore }/byId`](type, r[`${ this.direction }Id`])?.state || STATES_ENUM.MISSING;\n        const stateColor = colorForState(state, r.error, r.transitioning);\n        const schema = this.$store.getters[`${ inStore }/schemaFor`](type);\n\n        let name = r[`${ this.direction }Id`];\n\n        // Skip things like toType/toNamespace+selector for now\n        if ( !name ) {\n          continue;\n        }\n\n        let namespace = null;\n        const idx = name.indexOf('/');\n        const key = `${ type }/${ namespace }/${ name }`;\n\n        if ( idx > 0 ) {\n          namespace = name.substr(0, idx);\n          name = name.substr(idx + 1);\n        }\n\n        const detailLocation = {\n          name:   `c-cluster-product-resource${ namespace ? '-namespace' : '' }-id`,\n          params: {\n            product:  EXPLORER,\n            cluster:  inStore === 'management' ? 'local' : cluster,\n            resource: type,\n            namespace,\n            id:       name,\n          }\n        };\n\n        out.push({\n          type,\n          id:       r[`${ this.direction }Id`],\n          state,\n          metadata: { namespace, name },\n          _key:     key,\n\n          name,\n          namespace,\n          nameDisplay: name,\n          nameSort:    sortableNumericSuffix(name).toLowerCase(),\n\n          stateColor,\n          detailLocation,\n          typeDisplay:     this.$store.getters['type-map/labelFor'](schema),\n          stateDisplay:    stateDisplay(state),\n          stateBackground: stateColor.replace('text-', 'bg-'),\n          groupByLabel:    namespace,\n        });\n      }\n\n      return out;\n    },\n\n    headers() {\n      return [\n        STATE,\n        TYPE,\n        NAME,\n        NAMESPACE,\n      ];\n    },\n  },\n\n  methods: {\n    async getRealResources(rows) {\n      const inStore = this.$store.getters['currentStore']();\n\n      const res = await Promise.allSettled(rows.map((row) => {\n        return this.$store.dispatch(`${ inStore }/find`, { type: row.type, id: row.id });\n      }));\n\n      const out = [];\n\n      for ( let i = 0 ; i < res.length ; i++ ) {\n        if ( res[i].status === 'fulfilled' ) {\n          out.push(res[i].value);\n        }\n      }\n\n      this.loadedResources++;\n\n      return out;\n    }\n  },\n};\n</script>\n\n<template>\n  <ResourceTable\n    :schema=\"null\"\n    :rows=\"rows\"\n    :headers=\"headers\"\n    :search=\"false\"\n    :table-actions=\"false\"\n    :namespaced=\"true\"\n    :mangle-action-resources=\"getRealResources\"\n    paging-label=\"sortableTable.paging.generic\"\n    :groupable=\"false\"\n  >\n    <template #cell:state=\"{row}\">\n      <BadgeState :value=\"row\" />\n    </template>\n  </ResourceTable>\n</template>\n","import { render } from \"./RelatedResources.vue?vue&type=template&id=d7ed5472\"\nimport script from \"./RelatedResources.vue?vue&type=script&lang=js\"\nexport * from \"./RelatedResources.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./index.vue?vue&type=template&id=308eb180\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createBlock","_component_Tabbed","_mergeProps","_ctx","$attrs","$props","defaultTab","resource","value","useHash","onChanged","$options","tabChange","default","_withCtx","_renderSlot","$slots","$data","showConditions","_component_Tab","key","name","weight","conditionsHaveIssues","_createVNode","_component_Conditions","_","_createCommentVNode","showEvents","selectedTab","_component_PaginatedResourceTable","schema","eventSchema","filterEventsLocal","filterEventsApi","headers","eventHeaders","paginationHeaders","namespaced","showRelated","_createElementVNode","_component_RelatedResources","type","direction","_hoisted_1","_component_SortableTable","rows","search","row","_normalizeClass","error","condition","status","components","SortableTable","props","Object","computed","labelKey","width","sort","dashIfEmpty","formatter","formatterOpts","addSuffix","this","conditions","map","cond","message","reason","trim","time","lastProbeTime","lastUpdateTime","lastTransitionTime","__exports__","render","_cache","$setup","_component_ResourceTable","_resolveComponent","_openBlock","_createElementBlock","ref","canPaginate","isFirstLoad","loading","groupable","safeHeaders","paginationResult","onPaginationChanged","paginationChanged","_createSlots","_renderList","slot","fn","scope","_normalizeProps","_guardReactiveProps","defineComponent","ResourceTable","mixins","ResourceFetch","required","Array","Boolean","fetchSecondaryResources","Function","fetchPageSecondaryResources","data","id","fetch","promises","$fetchType","inStore","push","Promise","all","customHeaders","$store","getters","methods","clearSelection","$refs","table","getRealResources","_component_BadgeState","BadgeState","rel","String","ignoreTypes","loadedResources","filteredRelationships","metadata","relationships","filter","relationship","includes","cluster","out","r","state","STATES_ENUM","MISSING","stateColor","colorForState","transitioning","namespace","idx","indexOf","substr","detailLocation","params","product","EXPLORER","_key","nameDisplay","nameSort","sortableNumericSuffix","toLowerCase","typeDisplay","stateDisplay","stateBackground","replace","groupByLabel","STATE","TYPE","NAME","NAMESPACE","res","allSettled","dispatch","i","length","Tabbed","Tab","Conditions","PaginatedResourceTable","RelatedResources","CreateEditView","mode","_VIEW","needConditions","needEvents","needRelated","extensionParams","EVENT","STEVE_EVENT_LAST_SEEN","STEVE_EVENT_TYPE","REASON","headerFromSchemaColString","MESSAGE","STEVE_NAME_COL","beforeUnmount","setShowConditions","isView","label","t","isConditionReadyAndWaiting","some","neu","selectedName","fetchResourceFields","event","involvedObject","uid","pagination","filters","field","existing","fields","find","f","PaginationParamFilter","createSingleField","exact","equals","assign"],"sourceRoot":""}